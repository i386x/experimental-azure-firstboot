---

#- name: Enable Debugging
#  debug:
#    verbosity: "{{ debuglevel }}"
#
# Minimum supported Supported Kernel versions and patches to use with certified Hardware for SAP HANA on RHEL 7
- name: ensure minimal required packages are installed
  yum:
    state: present
    name: "{{ sap_hana_preconfigure_min_pkgs }}"
  when: 
    - sap_hana_preconfigure_min_package_check 
    - not( (sap_hana_preconfigure_min_pkgs is undefined) or (sap_hana_preconfigure_min_pkgs is none) or (sap_hana_preconfigure_min_pkgs | trim == '') ) 

# Note: This command will fail if sap_hana_preconfigure_packagegroups is undefined, which happens on an unsupported architecture
- name: ensure required packagegroups are installed
  yum: 
    state: latest 
    name: "{{ sap_hana_preconfigure_packagegroups }}"

# temporary
- name: ensure required packages are installed
  yum:
    state: latest
    name: "{{ sap_hana_preconfigure_packages }}"

- name: ensure system is updated to the latest patchlevel
  yum:
    state: latest
    name: "*"
  when: sap_hana_preconfigure_update

- name: check if reboot is required (7.3+)
  command: needs-restarting -r
  register: sap_hana_preconfigure_register_reboot_required
  changed_when: false
  failed_when: sap_hana_preconfigure_register_reboot_required.rc > 1 
  when: ( ansible_distribution_version >= "7.3" ) and ( ansible_distribution_major_version == "7" )

# This did not work properly because, the last register variable is used in the next when statement.
#- name: check if reboot is required (7.2)
#  command: needs-restarting
#  register: reboot_required_72
#  changed_when: false
#  failed_when: reboot_required_72.rc > 1
#  when: ( ansible_distribution_version == "7.2" ) and ( ansible_distribution_major_version == "7" )
 
  # Not sure if this works for RHEL 7.2, 7.3, tested on 7.4+
- name: Debug output of Reboot requirement
  debug:
    var: sap_hana_preconfigure_register_reboot_required 
#   msg: "Reboot required: {{ sap_hana_preconfigure_register_reboot_required.rc }}"

- name: Reboot if required
  block:
      # Reboot the server now and wait until it is back
      # inspired by https://support.ansible.com/hc/en-us/articles/201958037-Reboot-a-server-and-wait-for-it-to-come-back
      - name: restart machine if required
        shell: sleep 2 && shutdown -r now "Ansible updates triggered"
        async: 1
        poll: 0
        become: true
        ignore_errors: true

      - name: waiting for server to come back
        local_action: wait_for host={{ inventory_hostname }} port=22 state=started delay=90 sleep=2 timeout={{ sap_hana_preconfigure_reboot_timeout }}
        become: false
  when: sap_hana_preconfigure_reboot_after_update == true and sap_hana_preconfigure_register_reboot_required.rc == 1

...
